" =============================================================================
" Filename: test/parseHslColor.vim
" Author: sabiz
" License: MIT License
" =============================================================================

let s:suite = themis#suite('c2view parse')
let s:assert = themis#helper('assert')

let s:testTargetFile = 'autoload/c2view/parse.vim'

function! s:parseHslColor(text)
  return GetLocalFunction(s:testTargetFile, 'parseHslColor')(a:text)
endfunction

function! s:suite.test_turn()
  call s:assert.equals(s:parseHslColor('hsl(1turn, 10%, 10%)')[0], '360.0,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(.5turn 10% 10%)')[0], '180.0,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(2.5turn, 10%, 10%, 10%)')[0], '900.0,0.1,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(+2.5turn, 10%, 10%, 10%)')[0], '900.0,0.1,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(-2.5turn, 10%, 10%, 10%)')[0], '-900.0,0.1,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(.1turn,0%,3.2%,.05)')[0], '36.0,0.0,0.032,.05')
  call s:assert.equals(s:parseHslColor('hsl(.01turn 100% 10% / 0.1)')[0], '3.6,1.0,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(0.1turn,   10%,    10% / 15%)')[0], '36.0,0.1,0.1,0.15')
  call s:assert.equals(s:parseHslColor('hsl(1TURN, 10%, 10%)')[0], '360.0,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(.5tUrN 10% 10%)')[0], '180.0,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsla(2.5turn, 10%, 10%, 10%)')[0], '900.0,0.1,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsla(.1turn,0%,3.2%,.05)')[0], '36.0,0.0,0.032,.05')
  call s:assert.equals(s:parseHslColor('hsla(.01turn 100% 10% / 0.1)')[0], '3.6,1.0,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsla(0.1turn,   10%,    10% / 15%)')[0], '36.0,0.1,0.1,0.15')
  call s:assert.equals(s:parseHslColor('              hsl(1turn, 10%, 10%)')[0], '360.0,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(1turn, 10%, 10%)              ')[0], '360.0,0.1,0.1')
  call s:assert.equals(s:parseHslColor('       hsl(1turn, 10%, 10%)       ')[0], '360.0,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(.1trn,0%,3.2%,.05)')[0], '')
  call s:assert.equals(s:parseHslColor('hsl(.01turn1 100 10% / 0.1)')[0], '')
  call s:assert.equals(s:parseHslColor('hsl(.01turn 100 10% / 0.1)')[0], '')
  call s:assert.equals(s:parseHslColor('hsl(0.1turn,   10% / 15%)')[0], '')
endfunction

function! s:suite.test_grad()
  call s:assert.equals(s:parseHslColor('hsl(100grad, 10%, 10%)')[0], '90.0,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(12.5grad 10% 10%)')[0], '11.25,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(+12.5grad 10% 10%)')[0], '11.25,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(-12.5grad 10% 10%)')[0], '-11.25,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(500grad, 10%, 10%, 10%)')[0], '450.0,0.1,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(45.1grad,0%,3.2%,.05)')[0], '40.59,0.0,0.032,.05')
  call s:assert.equals(s:parseHslColor('hsl(.01grad 100% 10% / 0.1)')[0], '0.009,1.0,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(123grad,   10%,    10% / 15%)')[0], '110.7,0.1,0.1,0.15')
  call s:assert.equals(s:parseHslColor('hsl(400GRAD, 10%, 10%)')[0], '360.0,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(200gRaD 10% 10%)')[0], '180.0,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsla(900grad, 10%, 10%, 10%)')[0], '810.0,0.1,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsla(12.345grad,0%,3.2%,.05)')[0], '11.1105,0.0,0.032,.05')
  call s:assert.equals(s:parseHslColor('hsla(.01grad 100% 10% / 0.1)')[0], '0.009,1.0,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsla(0.1grad,   10%,    10% / 15%)')[0], '0.09,0.1,0.1,0.15')
  call s:assert.equals(s:parseHslColor('              hsl(400grad, 10%, 10%)')[0], '360.0,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(100grad, 10%, 10%)              ')[0], '90.0,0.1,0.1')
  call s:assert.equals(s:parseHslColor('       hsl(300grad, 10%, 10%)       ')[0], '270.0,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(.1grd,0%,3.2%,.05)')[0], '')
  call s:assert.equals(s:parseHslColor('hsl(.1grad1,0%,3.2%,.05)')[0], '')
  call s:assert.equals(s:parseHslColor('hsl(.01grad 100 10% / 0.1)')[0], '')
  call s:assert.equals(s:parseHslColor('hsl(0.1grad,   10% / 15%)')[0], '')
endfunction

function! s:suite.test_rad()
  call s:assert.equals(s:parseHslColor('hsl(1rad, 10%, 10%)')[0], '57.295828,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(12.5rad 10% 10%)')[0], '716.197849,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(+12.5rad 10% 10%)')[0], '716.197849,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(-12.5rad 10% 10%)')[0], '-716.197849,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(500rad, 10%, 10%, 10%)')[0], '28647.913954,0.1,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(45.1rad,0%,3.2%,.05)')[0], '2584.041839,0.0,0.032,.05')
  call s:assert.equals(s:parseHslColor('hsl(.01rad 100% 10% / 0.1)')[0], '0.572958,1.0,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(1.23rad,   10%,    10% / 15%)')[0], '70.473868,0.1,0.1,0.15')
  call s:assert.equals(s:parseHslColor('hsl(400RAD, 10%, 10%)')[0], '22918.331164,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(200rAd 10% 10%)')[0], '11459.165582,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsla(9rad, 10%, 10%, 10%)')[0], '515.662451,0.1,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsla(0.12345rad,0%,3.2%,.05)')[0], '7.07317,0.0,0.032,.05')
  call s:assert.equals(s:parseHslColor('hsla(.01rad 100% 10% / 0.1)')[0], '0.572958,1.0,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsla(0.1rad,   10%,    10% / 15%)')[0], '5.729583,0.1,0.1,0.15')
  call s:assert.equals(s:parseHslColor('              hsl(6.28319rad, 10%, 10%)')[0], '360.000573,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(1.5708rad, 10%, 10%)              ')[0], '90.000286,0.1,0.1')
  call s:assert.equals(s:parseHslColor('       hsl(4.71239rad, 10%, 10%)       ')[0], '270.000286,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(.1rd,0%,3.2%,.05)')[0], '')
  call s:assert.equals(s:parseHslColor('hsl(.1rad1,0%,3.2%,.05)')[0], '')
  call s:assert.equals(s:parseHslColor('hsl(.01rad 100 10% / 0.1)')[0], '')
  call s:assert.equals(s:parseHslColor('hsl(0.1rad,   10% / 15%)')[0], '')
endfunction

function! s:suite.test_deg()
  call s:assert.equals(s:parseHslColor('hsl(360, 10%, 10%)')[0], '360.0,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(360deg, 10%, 10%)')[0], '360.0,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(180 10% 10%)')[0], '180.0,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(900, 10%, 10%, 10%)')[0], '900.0,0.1,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(+900deg, 10%, 10%, 10%)')[0], '900.0,0.1,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(+900, 10%, 10%, 10%)')[0], '900.0,0.1,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(-900deg, 10%, 10%, 10%)')[0], '-900.0,0.1,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(-900, 10%, 10%, 10%)')[0], '-900.0,0.1,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(36.0,0%,3.2%,.05)')[0], '36.0,0.0,0.032,.05')
  call s:assert.equals(s:parseHslColor('hsl(3.6 100% 10% / 0.1)')[0], '3.6,1.0,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(0.36,   10%,    10% / 15%)')[0], '0.36,0.1,0.1,0.15')
  call s:assert.equals(s:parseHslColor('hsl(0.36deg,   10%,    10% / 15%)')[0], '0.36,0.1,0.1,0.15')
  call s:assert.equals(s:parseHslColor('hsl(360DEG, 10%, 10%)')[0], '360.0,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(180dEg 10% 10%)')[0], '180.0,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsla(0.009, 10%, 10%, 10%)')[0], '0.009,0.1,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsla(36,0%,3.2%,.05)')[0], '36.0,0.0,0.032,.05')
  call s:assert.equals(s:parseHslColor('hsla(3.6 100% 10% / 0.1)')[0], '3.6,1.0,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsla(36,   10%,    10% / 15%)')[0], '36.0,0.1,0.1,0.15')
  call s:assert.equals(s:parseHslColor('              hsl(360, 10%, 10%)')[0], '360.0,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(360, 10%, 10%)              ')[0], '360.0,0.1,0.1')
  call s:assert.equals(s:parseHslColor('       hsl(360, 10%, 10%)       ')[0], '360.0,0.1,0.1')
  call s:assert.equals(s:parseHslColor('hsl(.1de,0%,3.2%,.05)')[0], '')
  call s:assert.equals(s:parseHslColor('hsl(.01deg1 100 10% / 0.1)')[0], '')
  call s:assert.equals(s:parseHslColor('hsl(.01 100 10% / 0.1)')[0], '')
  call s:assert.equals(s:parseHslColor('hsl(0.1,   10% / 15%)')[0], '')
endfunction

" vim:ft=vim:fdm=marker:fmr={{{,}}}:ts=8:sw=2:sts=2:et
